<div class="description is-full-height has-auto-scrolling mb-15px p-15px">
    <div class="markdown prose max-w-none" id="description">
        <p>Complete the function/method (depending on the language) to return <code>true</code>/<code>True</code> when its argument is an array that has the same nesting structures and same corresponding length of nested arrays as the first array.</p>
        <p>For example:</p>
        <pre style="display: none;"><code class="language-javascript"> <span class="cm-comment">// should return true</span>
    [ <span class="cm-number">1</span>, <span class="cm-number">1</span>, <span class="cm-number">1</span> ].<span class="cm-property">sameStructureAs</span>( [ <span class="cm-number">2</span>, <span class="cm-number">2</span>, <span class="cm-number">2</span> ] );          
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ].<span class="cm-property">sameStructureAs</span>( [ <span class="cm-number">2</span>, [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ] ] );  
    
     <span class="cm-comment">// should return false </span>
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ].<span class="cm-property">sameStructureAs</span>( [ [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] );  
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ].<span class="cm-property">sameStructureAs</span>( [ [ <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] );  
    
    <span class="cm-comment">// should return true</span>
    [ [ [ ], [ ] ] ].<span class="cm-property">sameStructureAs</span>( [ [ [ ], [ ] ] ] ); 
    
    <span class="cm-comment">// should return false</span>
    [ [ [ ], [ ] ] ].<span class="cm-property">sameStructureAs</span>( [ [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ] );     </code></pre>
        <pre style="display: none;"><code class="language-php"><span class="cm-variable">same_structure_as</span>([<span class="cm-number">1</span>, <span class="cm-number">1</span>, <span class="cm-number">1</span>], [<span class="cm-number">2</span>, <span class="cm-number">2</span>, <span class="cm-number">2</span>]); <span class="cm-comment">// =&gt; true</span>
    <span class="cm-variable">same_structure_as</span>([<span class="cm-number">1</span>, [<span class="cm-number">1</span>, <span class="cm-number">1</span>]], [<span class="cm-number">2</span>, [<span class="cm-number">2</span>, <span class="cm-number">2</span>]]); <span class="cm-comment">// =&gt; true</span>
    <span class="cm-variable">same_structure_as</span>([<span class="cm-number">1</span>, [<span class="cm-number">1</span>, <span class="cm-number">1</span>]], [[<span class="cm-number">2</span>, <span class="cm-number">2</span>], <span class="cm-number">2</span>]); <span class="cm-comment">// =&gt; false</span>
    <span class="cm-variable">same_structure_as</span>([<span class="cm-number">1</span>, [<span class="cm-number">1</span>, <span class="cm-number">1</span>]], [[<span class="cm-number">2</span>], <span class="cm-number">2</span>]); <span class="cm-comment">// =&gt; false</span>
    <span class="cm-variable">same_structure_as</span>([[[], []]], [[[], []]]); <span class="cm-comment">// =&gt; true</span>
    <span class="cm-variable">same_structure_as</span>([[[], []]], [[<span class="cm-number">1</span>, <span class="cm-number">1</span>]]); <span class="cm-comment">// =&gt; false</span></code></pre>
        <pre style="display: none;"><code class="language-ruby"><span class="cm-comment"># should return true</span>
    [ <span class="cm-number">1</span>, <span class="cm-number">1</span>, <span class="cm-number">1</span> ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ <span class="cm-number">2</span>, <span class="cm-number">2</span>, <span class="cm-number">2</span> ] )
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ <span class="cm-number">2</span>, [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ] ] )
    
    <span class="cm-comment"># should return false </span>
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] )
    [ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ [ <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] )
    
    <span class="cm-comment"># should return true</span>
    [ [ [ ], [ ] ] ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ [ [ ], [ ] ] ] ); 
    
    <span class="cm-comment"># should return false</span>
    [ [ [ ], [ ] ] ]<span class="cm-operator">.</span><span class="cm-property">same_structure_as</span>( [ [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ] )   </code></pre>
        <pre><code class="language-python"><span class="cm-comment"># should return True</span>
    <span class="cm-variable">same_structure_as</span>([ <span class="cm-number">1</span>, <span class="cm-number">1</span>, <span class="cm-number">1</span> ], [ <span class="cm-number">2</span>, <span class="cm-number">2</span>, <span class="cm-number">2</span> ] )
    <span class="cm-variable">same_structure_as</span>([ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ], [ <span class="cm-number">2</span>, [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ] ] )
    
    <span class="cm-comment"># should return False </span>
    <span class="cm-variable">same_structure_as</span>([ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ], [ [ <span class="cm-number">2</span>, <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] )
    <span class="cm-variable">same_structure_as</span>([ <span class="cm-number">1</span>, [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ], [ [ <span class="cm-number">2</span> ], <span class="cm-number">2</span> ] )
    
    <span class="cm-comment"># should return True</span>
    <span class="cm-variable">same_structure_as</span>([ [ [ ], [ ] ] ], [ [ [ ], [ ] ] ] )
    
    <span class="cm-comment"># should return False</span>
    <span class="cm-variable">same_structure_as</span>([ [ [ ], [ ] ] ], [ [ <span class="cm-number">1</span>, <span class="cm-number">1</span> ] ] )</code></pre>
    </div>
    <hr>
    <div class="mt-15px"><span><i class="icon-moon-tag "></i></span>
        <div class="keyword-tag">Algorithms</div>
        <div class="keyword-tag">Arrays</div>
    </div>
    <hr><br>
    <div class="text-center">
        <a class="hover:text-current" data-tippy-content="Supercharge your technical hiring with developer assessments." data-tippy-placement="top" href="https://www.qualified.io?utm_source=codewars&amp;utm_medium=web" target="_blank">
            <div class="flex items-baseline justify-center"><span class="pl-1 text-xs inline-block">powered by</span><img class="h-4 inline-block dark:hidden pl-1" src="/assets/logos/qualified-black-b052752a4beaf94810c9d982f495680e2a9eb207824764ef98240ccef15cfbb1.svg"><img class="h-4 hidden dark:inline-block pl-1"
                    src="/assets/logos/qualified-white-7cba1bde874154ee4f39d50aebd5b7e435f5b21af9884b236a60d9015039e7f0.svg"></div>
        </a>
    </div>
</div>